#include <bits/stdc++.h>
using namespace std;

// 10 -> n 진법 (b 값에 따라 결정)
// n 으로 인수분해
/**
 * @brief 진수 변환
 * 
 * 10 -> 2 진수
 * ex)
 * 1. 21
 * 2. 21 / 2 (10...1) / 2 (5...0) / 2 (2...1) / 2 (1...0)
 * 3. 나머지 들을 거꾸로 이어줍니다. (답: 10101 - 검산 - 2^4(16) + 0 + 2^2(4) + 0 + 2^0(1) = 21)
 * 
 * 2 -> 10 진수
 * ex)
 * 1. 11001
 * 2. 2^4 + 2^3 + 0 + 0 + 2^0
 * 3. 25
 * 
 * 2 -> 16 진수
 * 4자리씩 짝을 짓는다. (8진수로 변환시 3자리씩)
 * ex)
 * 1. 11001100 -> (1100)(1101)
 * 2. (2^3 + 2^2 + 0 + 0) + (2^3 + 2^2 + 0 + 2^0)
 * 3. 12 + 13 -> 10 부터 15 까지, A~F 사이에 있는지 확인
 * 4. answer. 11001100 => CD
 * 
 * @return int 
 */
int main()
{
  vector<int> v;
  int n = 100;
  int b = 2;
  while (n > 1)
  {
    v.push_back(n % b);
    n /= b;
  }
  if (n == 1)
    v.push_back(1);
  reverse(v.begin(), v.end());
  for (int a : v)
  {
    if (a >= 10)
      cout << char(a + 55);
    else
      cout << a;
  }
  return 0;
}